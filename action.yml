# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Deploy to Cloud Run'
author: 'Google LLC'
description: |-
  Use this action to deploy a container or source code to Google Cloud Run.

inputs:
  service:
    description: |-
      (Required, unless providing `metadata` or `job`) ID of the service or
      fully-qualified identifier of the service. Only one of `service` or `job`
      may be specified.
    required: false

  image:
    description: |-
      (Required, unless providing `metadata` or `source`) Fully-qualified name
      of the container image to deploy. For example:

          gcr.io/cloudrun/hello:latest

      or

          us-docker.pkg.dev/my-project/my-container/image:1.2.3
    required: false

  source:
    description: |-
      (Required, unless providing `metadata`, `image`, or `job`) Path to source
      to deploy. If specified, this will deploy the Cloud Run service from the
      code specified at the given source directory.

      This requires the Artifact Registry API to be enabled. Furthermore, the
      deploying service account must have the `Cloud Build Service Account`
      role. The initial deployment will create an Artifact Registry repository
      which requires the `Artifact Registry Admin` role.
    required: false

  job:
    description: |-
      (Required, unless providing `metadata` or `service`) ID of the job or
      fully-qualified identifier of the job.
    required: false

  suffix:
    description: |-
      (Optional) String suffix to append to the revision name. Revision names
      always start with the service name automatically. For example, specifying
      'v1' for a service named 'helloworld', would lead to a revision named
      'helloworld-v1'. The default value is no suffix.
    required: false

  env_vars:
    description: |-
      (Optional) List of key=value pairs to set as environment variables. All
      existing environment variables will be retained. If both `env_vars` and
      `env_vars_file` are specified, the keys in `env_vars` will take
      precendence over the keys in `env_vars_files`.

          with:
            env_vars: |
              FOO=bar
              ZIP=zap

      Entries are separated by commas (`,`) and newline characters. Keys and
      values are separated by `=`. To use `,`, `=`, or newline characters,
      escape them with a backslash:

          with:
            env_vars: |
              EMAILS=foo@bar.com\,zip@zap.com
    required: false

  env_vars_file:
    description: |-
      (Optional) Path to a file on disk, relative to the workspace, that defines
      environment variables. The file can be newline-separated KEY=VALUE pairs,
      JSON, or YAML format. If both `env_vars` and `env_vars_file` are
      specified, the keys in env_vars will take precendence over the keys in
      env_vars_files.

          FOO=bar
          ZIP=zap

      or

          {
            "FOO": "bar",
            "ZIP": "zap"
          }

      or

          FOO: 'bar'
          ZIP: 'zap'

      When specified as KEY=VALUE pairs, the same escaping rules apply as
      described in `env_vars`. You do not have to escape YAML or JSON.
    required: false

  env_vars_update_strategy:
    description: |-
      (Optional) Controls how the environment variables are set on the Cloud Run
      service. If set to "merge", then the environment variables are merged with
      any upstream values. If set to "overwrite", then all environment variables
      on the Cloud Run service will be replaced with exactly the values given by
      the GitHub Action (making it authoritative).
    required: true
    default: 'merge'

  secrets:
    description: |-
      (Optional) List of key=value pairs to use as secrets. These can either be
      injected as environment variables or mounted as volumes. All existing
      environment secrets and volume mounts will be retained.

        with:
          secrets: |
            # As an environment variable:
            KEY1=secret-key-1:latest

            # As a volume mount:
            /secrets/api/key=secret-key-2:latest

      The same rules apply for escaping entries as from `env_vars`, but Cloud
      Run is more restrictive with allowed keys and names for secrets.
    required: false

  secrets_update_strategy:
    description: |-
      (Optional) Controls how the secrets are set on the Cloud Run service. If
      set to "merge", then the secrets are merged with any upstream values. If
      set to "overwrite", then all secrets on the Cloud Run service will be
      replaced with exactly the values given by the GitHub Action (making it
      authoritative).
    required: true
    default: 'merge'

  labels:
    description: |-
      (Optional) List of key=value pairs to set as labels on the Cloud
      Run service. Existing labels will be overwritten.

        with:
          labels: |-
            my-label=my-value

      The same rules apply for escaping entries as from `env_vars`, but labels
      have strict naming and casing requirements.
    required: false

  skip_default_labels:
    description: |-
      (Optional) Skip applying the special annotation labels that indicate the
      deployment came from GitHub Actions. The GitHub Action will automatically
      apply the following labels which Cloud Run uses to enhance the user
      experience:

          managed-by: github-actions
          commit-sha: <sha>

      Setting this to `true` will skip adding these special labels. The default
      value is `false`.
    required: false
    default: false

  tag:
    description: |-
      (Optional) Traffic tag to assign to the newly-created revision.
    required: false

  timeout:
    description: |-
      (Optional) Maximum request execution time, specified as a duration like
      "10m5s" for ten minutes and 5 seconds.
    required: false

  flags:
    description: |-
      (Optional) Space separate list of other Cloud Run flags. This can be used
      to access features that are not exposed via this GitHub Action.

        with:
          flags: '--add-cloudsql-instances=...'

      Please note, this GitHub Action does not parse or validate the flags. You
      are responsible for making sure the flags are available on the gcloud
      version and subcommand. When using `tag_traffic` or `revision_traffic`,
      the subcommand is `gcloud run services update-traffic`. For all other
      values, the subcommand is `gcloud run deploy`.
    required: false

  no_traffic:
    description: |-
      (Optional) If true, the newly deployed revision will not receive traffic.
      The default value is false.
    default: false
    required: false

  revision_traffic:
    description: |-
      (Optional, mutually-exclusive with `tag_traffic`) Comma-separated list of
      revision traffic assignments.

          with:
            revision_traffic: 'my-revision=10' # percentage

      To update traffic to the latest revision, use the special tag "LATEST":

          with:
            revision_traffic: 'LATEST=100'
    required: false

  tag_traffic:
    description: |-
      (Optional, mutually-exclusive with `revision_traffic`) Comma-separated
      list of tag traffic assignments.

          with:
            tag_traffic: 'my-tag=10' # percentage
    required: false

  project_id:
    description: |-
      (Optional) ID of the Google Cloud project in which to deploy the service.
      The default value is computed from the environment.
    required: false

  region:
    description: |-
      (Optional) Regions in which the Cloud Run services are deployed. This can
      be a single region or a comma-separated list of regions.
    required: false
    default: 'us-central1'

  gcloud_version:
    description: |-
      Version of the Cloud SDK to install. If unspecified or set to "latest",
      the latest available gcloud SDK version for the target platform will be
      installed. Example: "290.0.1".
    required: false

  gcloud_component:
    description: |-
      Version of the Cloud SDK components to install and use. If unspecified, the latest
      or released version will be used. This is the equivalent of running
      'gcloud alpha run' or 'gcloud beta run'. Valid values are `alpha` or `beta`.
    required: false

  metadata:
    description: |-
      YAML service description for the Cloud Run service.
    required: false

outputs:
  url:
    description: |-
      The URL of your Cloud Run service

branding:
  icon: 'chevrons-right'
  color: 'blue'

runs:
  using: 'node20'
  main: 'dist/main/index.js'
