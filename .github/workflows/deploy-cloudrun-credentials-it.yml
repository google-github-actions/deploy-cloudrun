name: deploy-cloudrun Credentials Integration

on:
  push:
    branches:
    - 'main'
  pull_request:

jobs:
  gcloud:
    name: with setup-gcloud
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-gcloud-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: |-
        npm ci
        npm run build

    - name: Set up authentication
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - id: deploy
      uses: ./
      with:
        image: gcr.io/cloudrun/hello
        service: ${{ steps.service.outputs.service }}

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy.outputs.url }}
        PROJECT_ID: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

  b64_json:
    name: with base64 creds
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-b64-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: |-
        npm ci
        npm run build

    - id: deploy
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        image: gcr.io/cloudrun/hello
        service: ${{ steps.service.outputs.service }}

    - uses: google-github-actions/setup-gcloud@v0 # Set up ADC to make authenticated request to service
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy.outputs.url }}
        PROJECT_ID: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

  json:
    name: with json creds
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-json-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: |-
        npm ci
        npm run build

    - id: deploy
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        image: gcr.io/cloudrun/hello
        service: ${{ steps.service.outputs.service }}

    - uses: google-github-actions/setup-gcloud@v0 # Set up ADC to make authenticated request to service
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy.outputs.url }}
        PROJECT_ID: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

  wif:
    name: with wif creds
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest

    permissions:
      id-token: 'write'

    steps:
    - id: service
      run: echo ::set-output name=service::run-wif-$GITHUB_SHA

    - uses: actions/checkout@v2

    - uses: actions/setup-node@master
      with:
        node-version: 12.x

    - run: |-
        npm ci
        npm run build

    - id: auth
      uses: google-github-actions/auth@main
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER_NAME }}
        service_account: ${{ secrets.DEPLOY_CLOUDRUN_SA_EMAIL }}

    - id: deploy
      uses: ./
      with:
        image: gcr.io/cloudrun/hello
        service: ${{ steps.service.outputs.service }}

    - uses: google-github-actions/setup-gcloud@v0 # Set up ADC to make authenticated request to service
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy.outputs.url }}
        PROJECT_ID: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

  cleanup:
    name: Clean Up
    if: ${{ (github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]') && always() }}
    runs-on: ubuntu-latest
    needs: [json, gcloud, b64_json, wif]
    steps:
    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        project_id: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

    - name: Delete services
      run: |-
        gcloud config set run/platform managed
        gcloud config set run/region us-central1
        gcloud run services delete run-json-$GITHUB_SHA --quiet
        gcloud run services delete run-b64-$GITHUB_SHA --quiet
        gcloud run services delete run-gcloud-$GITHUB_SHA --quiet
        gcloud run services delete run-wif-$GITHUB_SHA --quiet
