name: deploy-cloudrun Traffic Integration

on:
  push:
    branches: 
    - 'main'
  pull_request:

jobs:
  source:
    name: with Source
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-source-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - name: Build Javascript
      run: |-
        npm install
        npm run build

    - name: Deploys from source
      id: deploy_1
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        source: example-app

    - name: Setup Authentication with gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy_1.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}

    - name: Update Service with env vars
      id: deploy_2
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        source: example-app
        env_vars: TEST_ENV=TEST_VAR
        flags: "--cpu=2 --memory=1Gi --concurrency=20"

    - name: Integration Tests # Check that config isn't overwritten
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy_2.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        ENV: TEST_ENV=TEST_VAR
        PARAMS: "{\"cpu\": 2,\"memory\": \"1Gi\", \"containerConcurrency\": 20}"
        COUNT: 2

  suffix:
    name: with Suffix
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-suffix-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - name: Build Javascript
      run: |-
        npm install
        npm run build
    - name: Deploys with suffix
      id: deploy_1
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        image: gcr.io/cloudrun/hello
        suffix: "002"

    - name: Setup Authentication with gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy_1.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        REVISION: ${{ steps.service.outputs.service }}-002
  
  tag:
    name: with Tag
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot' }}
    runs-on: ubuntu-latest
    steps:
    - id: service
      run: echo ::set-output name=service::run-tag-$(echo $GITHUB_SHA | cut -c1-6)
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 12.x

    - name: Build Javascript
      run: |-
        npm install
        npm run build

    - name: Deploys with tag
      id: deploy_1
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        image: gcr.io/cloudrun/hello
        tag: test-tag

    - name: Setup Authentication with gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy_1.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        TAG: test-tag

    - name: Deploys new revision
      id: deploy_2
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        image: gcr.io/cloudrun/hello:latest
        suffix: "v2"

    - name: Updates traffic
      id: traffic_1
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        tag_traffic: "test-tag=100"
    
    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.traffic_1.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        TAG: test-tag
        TRAFFIC: 100

    - name: Updates traffic
      id: traffic_2
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        revision_traffic: "${{ steps.service.outputs.service }}-v2=20"
    
    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.traffic_2.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        TAG: test-tag
        TRAFFIC: 80

    - name: Deploys new revision
      id: deploy_3
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        service: ${{ steps.service.outputs.service }}
        image: gcr.io/cloudrun/hello
        tag: no-traffic
        no_traffic: true

    - name: Integration Tests
      run: npm run e2e-tests
      env:
        URL: ${{ steps.deploy_3.outputs.url }}
        SERVICE: ${{ steps.service.outputs.service }}
        TAG: test-tag
        TRAFFIC: 80

  cleanup:
    name: Clean Up
    if: ${{ (github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name) && always() }}
    runs-on: ubuntu-latest
    needs: [source, suffix, tag]
    steps:
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        project_id: ${{ secrets.DEPLOY_CLOUDRUN_PROJECT_ID }}

    - name: Delete services
      run: |-
        gcloud config set run/platform managed
        gcloud config set run/region us-central1
        gcloud run services delete run-source-$GITHUB_SHA --quiet
        gcloud run services delete run-suffix-$GITHUB_SHA --quiet
        gcloud run services delete run-tag-$(echo $GITHUB_SHA | cut -c1-6) --quiet
